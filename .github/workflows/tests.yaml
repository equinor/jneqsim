on:
  # Workflow dispatch is used for manual triggers
  workflow_dispatch:
  # Workflow call is used for called from another workflow
  workflow_call:

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Install Poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4.5.0
        with:
          python-version: "3.9"
          cache: 'poetry'

      - name: Check pyproject.toml validity
        run: poetry check --no-interaction

      - name: Install deps
        run: poetry install --no-interaction

      - name: Run pre-commit
        run: poetry run pre-commit run --all-files

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Install Poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4.5.0
        with:
          python-version: "3.12"
          cache: 'poetry'
      - name: Install deps
        run: poetry install --no-interaction

      - name: Download JAR
        run: |
          VERSION=$(curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/equinor/neqsim/releases/latest | jq '.tag_name' --raw-output)
          VERSION="${VERSION:1}"
          wget --output-document "jneqsim/neqsim-Java11.jar" "https://github.com/equinor/neqsim/releases/download/v$VERSION/neqsim-$VERSION.jar"
          wget --output-document "jneqsim/neqsim-Java8.jar" "https://github.com/equinor/neqsim/releases/download/v$VERSION/neqsim-$VERSION-Java8.jar"
          wget --output-document "jneqsim/neqsim-Java21.jar" "https://github.com/equinor/neqsim/releases/download/v$VERSION/neqsim-$VERSION-Java21.jar"
          echo "Wrote JAR to jneqsim/neqsim-Java*.jar"

      - name: Generate stubs
        run: poetry run python ./generate_stubs.py

      - name: Fixup module naming
        run: find jneqsim/neqsim -type f -name "*.pyi" -print0 | xargs -0  sed -i '' -e 's/neqsim./jneqsim.neqsim./g' || true

      - name: Build
        run: poetry build

      - name: Upload python dist
        uses: actions/upload-artifact@v4
        with:
          name: jneqsim-test-package
          path: ./dist/jneqsim-0.0.0.tar.gz

  integration:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        java: [ '8', '11', '17', '21' ]
    name: Java ${{ matrix.Java }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: jneqsim-test-package

      - name: Install package and test it
        run: |
          cd tests
          python -m venv .venv
          source .venv/bin/activate
          pip install ../jneqsim-0.0.0.tar.gz pytest
          pytest